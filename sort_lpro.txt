Wrote profile results to sorts.py.lprof
Timer unit: 1e-06 s

Total time: 1.59798 s
File: sorts.py
Function: test_sorted at line 3

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     3                                           @profile
     4                                           def test_sorted(fn, iters=1000):
     5      3000       1262.7      0.4      0.1      for i in range(iters):
     6      3000     263959.1     88.0     16.5          l = [random.randint(0, 100) for i in range(0, random.randint(0, 50))]
     7      3000    1332760.6    444.3     83.4          assert fn(l) == sorted(l)
     8                                                   # print(fn.__name__, fn(l))

Total time: 0.241937 s
File: sorts.py
Function: insertionsort at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def insertionsort(array):
    13                                           
    14     24739       7145.5      0.3      3.0      for i in range(len(array)):
    15     24739       7219.5      0.3      3.0          j = i-1
    16     24739       7056.7      0.3      2.9          v = array[i]
    17    200210      82115.4      0.4     33.9          while j >= 0 and v < array[j]:
    18    200210      71719.4      0.4     29.6              array[j+1] = array[j]
    19    200210      57329.0      0.3     23.7              j -= 1
    20     24739       9061.7      0.4      3.7          array[j+1] = v
    21      1000        289.6      0.3      0.1      return array

Total time: 0.117469 s
File: sorts.py
Function: quicksort at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @profile
    25                                           def quicksort(array):
    26     17636       7162.3      0.4      6.1      if len(array) <= 1:
    27     17636       4772.8      0.3      4.1          return array
    28     16636       5345.9      0.3      4.6      pivot = array[0]
    29     16636      38082.7      2.3     32.4      left = [i for i in array[1:] if i < pivot]
    30     16636      37979.7      2.3     32.3      right = [i for i in array[1:] if i >= pivot]
    31     16636      24125.2      1.5     20.5      return quicksort(left) + [pivot] + quicksort(right)

Total time: 0.19796 s
File: sorts.py
Function: quicksort_inplace at line 34

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    34                                           @profile
    35                                           def quicksort_inplace(array, low=0, high=None):
    36     33705      13686.3      0.4      6.9      if len(array) <= 1:
    37        37          9.5      0.3      0.0          return array
    38     32742       9859.9      0.3      5.0      if high is None:
    39       963        340.7      0.4      0.2          high = len(array)-1
    40     17334       5332.9      0.3      2.7      if low >= high:
    41     17334       4500.6      0.3      2.3          return array
    42                                           
    43     16371       4864.2      0.3      2.5      pivot = array[high]
    44     16371       4929.2      0.3      2.5      j = low-1
    45    107609      36495.7      0.3     18.4      for i in range(low, high):
    46     56011      17782.2      0.3      9.0          if array[i] <= pivot:
    47     56011      15916.6      0.3      8.0              j += 1
    48     56011      26352.6      0.5     13.3              array[i], array[j] = array[j], array[i]
    49     16371       8830.0      0.5      4.5      array[high], array[j+1] = array[j+1], array[high]
    50     16371      23981.3      1.5     12.1      quicksort_inplace(array, low, j)
    51     16371      21227.1      1.3     10.7      quicksort_inplace(array, j+2, high)
    52     16371       3851.6      0.2      1.9      return array

